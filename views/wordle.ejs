<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>SOTI Security Month 2025</title>
  <link rel="stylesheet" href="/css/styles.css">
  <style type="text/css">
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background: #f0f2f5;
      min-height: 100vh;
    }

    .header {
      background: rgba(255, 255, 255, 0.98);
      padding: 1rem 2rem;
      position: sticky;
      top: 0;
      z-index: 100;
    }

    .header-content {
      display: flex;
      justify-content: space-between;
      align-items: center;
      max-width: 1400px;
      margin: 0 auto;
    }

    .logo {
      font-size: 2rem;
      font-weight: bold;
      background: linear-gradient(45deg, #667eea, #764ba2);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      display: flex;
      align-items: center;
      gap: 10px;
    }

    .user-info {
      display: flex;
      align-items: center;
      gap: 20px;
    }

    .points-badge {
      background: linear-gradient(45deg, #ff6b6b, #ffa726);
      color: white;
      padding: 8px 16px;
      border-radius: 25px;
      font-weight: bold;
      animation: pulse 2s infinite;
    }

    @keyframes pulse {
      0%, 100% { transform: scale(1); }
      50% { transform: scale(1.05); }
    }

    .main-container {
      max-width: 1400px;
      margin: 0 auto;
      padding: 2rem;
      display: grid;
      grid-template-columns: 1fr 300px;
      gap: 2rem;
    }

    h1 {
      text-align: center;
      font-size: 2.5rem;
      margin-bottom: 1rem;
      color: #333;
    }

    .subtitle {
      text-align: center;
      color: #888;
      margin-bottom: 2rem;
    }

    #board {
      display: grid;
      grid-template-columns: repeat(5, 60px);
      gap: 10px;
      justify-content: center;
      margin: 1.5rem 0;
    }

    .tile {
      width: 60px;
      height: 60px;
      font-size: 2em;
      font-weight: bold;
      text-transform: uppercase;
      display: flex;
      align-items: center;
      justify-content: center;
      border-radius: 8px;
      background: #f1f1f1;
      border: 2px solid #ddd;
    }

    .correct {
      background: #4caf50;
      color: white;
    }

    .present {
      background: #ff9800;
      color: white;
    }

    .absent {
      background: #999;
      color: white;
    }

    .input-section {
      display: flex;
      justify-content: center;
      gap: 1rem;
      margin-bottom: 1.5rem;
    }

    input[type="text"] {
      padding: 12px 16px;
      font-size: 1.1em;
      border-radius: 10px;
      border: 1px solid #ccc;
      width: 180px;
      text-transform: uppercase;
    }

    button {
      background: linear-gradient(45deg, #667eea, #764ba2);
      border: none;
      border-radius: 10px;
      color: white;
      font-weight: bold;
      padding: 12px 20px;
      cursor: pointer;
      transition: 0.2s;
    }

    button:hover {
      opacity: 0.9;
    }

    #message {
      text-align: center;
      font-weight: bold;
      font-size: 1.1em;
      min-height: 40px;
      color: #333;
    }

    @media (max-width: 600px) {
      .tile {
        width: 45px;
        height: 45px;
        font-size: 1.4em;
      }

      #board {
        grid-template-columns: repeat(5, 45px);
        gap: 6px;
      }

      input[type="text"] {
        width: 140px;
      }
    }

.main-container {
  max-width: 1400px;
  margin: 0 auto;
  padding: 2rem;
  display: block; 
}

    .sidebar {
      display: flex;
      flex-direction: column;
      gap: 1.5rem;
    }

    .card {
      background: rgba(255, 255, 255, 0.98);
      border-radius: 20px;
      padding: 2rem;
      transition: transform 0.3s ease;
    }

    .card:hover {
      transform: translateY(-5px);
    }

    .card h3 {
      color: #333;
      margin-bottom: 1rem;
      font-size: 1.5rem;
    }

    .challenge-completed {
      background: linear-gradient(45deg, #c8e6c9, #a5d6a7);
      border-left-color: #4caf50;
    }

    .challenge-points {
      background: #667eea;
      color: white;
      padding: 4px 12px;
      border-radius: 15px;
      font-size: 0.8rem;
      font-weight: bold;
    }

    .nav-tabs {
      display: flex;
      gap: 1rem;
      margin-bottom: 2rem;
      overflow-x: auto;
    }

    .nav-tab {
      padding: 1rem 1.5rem;
      background: rgba(255, 255, 255, 0.7);
      border-radius: 25px;
      cursor: pointer;
      transition: all 0.3s ease;
      white-space: nowrap;
      font-weight: 500;
    }

    .nav-tab.active {
      background: linear-gradient(45deg, #667eea, #764ba2);
      color: white;
      transform: translateY(-2px);
    }

    .btn {
      padding: 12px 24px;
      border: none;
      border-radius: 25px;
      cursor: pointer;
      font-weight: bold;
      transition: all 0.3s ease;
      text-decoration: none;
      display: inline-block;
    }

    .btn-primary {
      background: linear-gradient(45deg, #667eea, #764ba2);
      color: white;
    }

    .btn-primary:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
    }


    .wordle-container {
      background: rgba(255, 255, 255, 0.98);
      max-width: 800px;
      margin: 0 auto;
      padding: 2rem;
      border-radius: 20px;
      box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
    }

    /* User menu and dropdown styles */
    .user-menu {
      position: relative;
      display: flex;
      flex-direction: column;
      align-items: flex-end;
      gap: 12px;
    }

    .user-avatar {
      cursor: pointer;
      padding: 6px 12px;
      min-height: 25px;
      background: linear-gradient(135deg, #667eea, #764ba2);
      color: white;
      border-radius: 9999px;
      font-weight: bold;
      user-select: none;
      transition: background-color 0.2s;
    }

    .dropdown-content {
      display: none;
      position: absolute;
      top: 100%;
      right: 0;
      margin-top: 4px;
      background-color: white;
      border: 1px solid #ccc;
      border-radius: 8px;
      box-shadow: 0 4px 8px rgba(0,0,0,0.1);
      min-width: 140px;
      z-index: 999;
    }

    .dropdown-content.show {
      display: block;
    }

    .dropdown-content a {
      display: block;
      padding: 10px;
      color: #333;
      text-decoration: none;
    }

    .dropdown-content a:hover {
      background-color: #f0f0f0;
    }

    @media (max-width: 768px) {
      .main-container {
        grid-template-columns: 1fr;
        padding: 1rem;
      }
    }
  </style>
</head>
<body>
<%- include('partials/header') %>
  <div class="main-container">
    <div class="content-area">
      <div class="wordle-container">
        <h1>Security Wordle</h1>
        <div class="subtitle">Day <span id="dayNumber"></span> ‚Äî Guess today's cybersecurity word</div>

        <div id="board"></div>

        <div class="input-section">
          <input type="text" id="guessInput" maxlength="5" placeholder="Enter word" />
          <button onclick="submitGuess()">Submit</button>
        </div>

        <div id="message">You have 6 attempts. Good luck!</div>
      </div>
    </div>
  </div>

  <script>
    const targetWord = "<%= targetWord %>";
    const day = <%= dayNumber %>;
    document.getElementById('dayNumber').textContent = day;

    let attempts = [];

    function updateBoard() {
      const board = document.getElementById('board');
      board.innerHTML = '';

      attempts.forEach(word => {
        const result = Array(5).fill('absent');
        const target = targetWord.split('');
        const guess = word.split('');
        const letterCount = {};

        for (let i = 0; i < 5; i++) {
          if (guess[i] === target[i]) {
            result[i] = 'correct';
            target[i] = null;
          } else {
            letterCount[target[i]] = (letterCount[target[i]] || 0) + 1;
          }
        }

        for (let i = 0; i < 5; i++) {
          if (result[i] !== 'correct' && letterCount[guess[i]] > 0) {
            result[i] = 'present';
            letterCount[guess[i]]--;
          }
        }

        for (let i = 0; i < 5; i++) {
          const tile = document.createElement('div');
          tile.className = `tile ${result[i]}`;
          tile.textContent = guess[i];
          board.appendChild(tile);
        }
      });

      for (let i = attempts.length; i < 6; i++) {
        for (let j = 0; j < 5; j++) {
          const tile = document.createElement('div');
          tile.className = 'tile';
          board.appendChild(tile);
        }
      }
    }

    function submitGuess() {
      const input = document.getElementById('guessInput');
      const guess = input.value.toLowerCase();

      if (guess.length !== 5) {
        document.getElementById('message').textContent = '‚ùó Enter a 5-letter word.';
        return;
      }

      attempts.push(guess);
      input.value = '';
      updateBoard();

      fetch('/wordle/submit', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ won: guess === targetWord })
      })
      .then(res => res.json())
      .then(data => {
        if (guess === targetWord) {
          document.getElementById('message').textContent = `üéâ You earned ${data.pointsAwarded} points!`;
          document.getElementById('guessInput').disabled = true;
        } else if (data.message.includes('Game Over')) {
          document.getElementById('message').textContent = `üíÄ ${data.message}. The word was: ${targetWord.toUpperCase()}`;
          document.getElementById('guessInput').disabled = true;
        } else {
          document.getElementById('message').textContent = data.message;
        }
      })
      .catch(() => {
        document.getElementById('message').textContent = '‚ùó Guess submitted, but server failed to respond.';
      });
    }

    document.getElementById('guessInput').addEventListener('keypress', function(e) {
      if (e.key === 'Enter') submitGuess();
    });

    updateBoard();

    // Dropdown toggle for logout
    function toggleDropdown() {
      const dropdown = document.getElementById('userDropdown');
      if (dropdown) dropdown.classList.toggle('show');
    }

    window.addEventListener('click', function (e) {
      const dropdown = document.getElementById('userDropdown');
      const avatar = document.querySelector('.user-avatar');
      if (!avatar || !dropdown) return;
      if (!avatar.contains(e.target) && !dropdown.contains(e.target)) {
        dropdown.classList.remove('show');
      }
    });
  </script>
</body>
</html>

